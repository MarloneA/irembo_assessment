// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @unique @default(autoincrement())
  email    String    @unique
  password String
  role     String
  bookings Booking[]
  Vehicle  Vehicle[]
}

model Booking {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  slot        Slot      @relation(fields: [slotId], references: [id])
  slotId      Int
  vehicle     Vehicle   @relation(fields: [vehicleId], references: [id])
  vehicleId   Int
  confirmed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  confirmedAt DateTime? @updatedAt
}

model Slot {
  id       Int       @id @default(autoincrement())
  start    DateTime
  end      DateTime
  isBooked Boolean   @default(false)
  bookings Booking[]
}

model Analytics {
  id        Int      @id @default(autoincrement())
  event     String
  timestamp DateTime @default(now())
  details   Json
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Vehicle {
  id       Int       @id @default(autoincrement())
  plate    String
  model    String
  capacity String
  Booking  Booking[]
  User     User?     @relation(fields: [userId], references: [id])
  userId   Int?
}
